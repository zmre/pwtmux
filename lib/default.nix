{
  lib,
  snowfall-inputs,
}:
# Taken from github:jakehamilton/tmux https://github.com/jakehamilton/tmux/blob/main/lib/default.nix
let
  hr = text: let
    parts = builtins.split "." text;
  in
    builtins.foldl'
    (
      text: part:
        if builtins.isList part
        then "${text}-"
        else text
    )
    ""
    (builtins.tail parts);
in {
  # Create a tmux configuration file.
  # Type: Attrs -> Path
  # Usage: mkConfig { inherit pkgs; shell = "${pkgs.bash}/bin/bash"; plugins = [ pkgs.tmuxPlugins.nord ]; extra-config = "set -g history-limit 1000"; }
  #   result: /nix/store/<hash>-tmux.conf
  mkConfig = {
    pkgs,
    shell ? "${pkgs.pwzsh}/bin/pwzsh",
    terminal ? "screen-256color-bce",
    plugins ? [],
    extra-config ? "",
  }: let
    is-package = pkgs.lib.types.package.check;
    get-plugin-name = plugin:
      if is-package plugin
      then plugin.pname
      else plugin.plugin.pname;

    base-config = ''
      set -g default-terminal "${terminal}"
    '';

    plugin-config =
      pkgs.lib.concatMapStringsSep
      "\n\n"
      (plugin: ''
        # ${get-plugin-name plugin}
        # ${hr (get-plugin-name plugin)}
        ${plugin.extraConfig or ""}
        run-shell ${
          if is-package plugin
          then plugin.rtp
          else plugin.plugin.rtp
        }
      '')
      plugins;
  in
    pkgs.writeText "tmux.conf" ''
      # This file is generated by https://github.com/zmre/tmux

      #========================#
      #          BASE          #
      #========================#

      set-option -g default-shell ${shell}
      set-option -g default-command ${shell}

      ${base-config}

      #========================#
      #         PLUGINS        #
      #========================#

      ${plugin-config}

      #========================#
      #      EXTRA CONFIG      #
      #========================#

      ${extra-config}
    '';
}
